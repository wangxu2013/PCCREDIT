<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cardpay.pccredit.report.dao.IntelligentReportDao">
	<resultMap id="CustomerResultMap" type="com.cardpay.pccredit.report.model.IntelligentCustomerReport">
		<result property="name" column="chinese_name" />
		<result property="cardId" column="CARD_ID" />
		<result property="creditAmount" column="creditAmount" />
		<result property="tempAmount" column="tempAmount" />
		<result property="householdAddress" column="HOUSEHOLD_ADDRESS" />
		<result property="customerBusinessAptitude" column="CUSTOMER_BUSINESS_APTITUDE" />
		<result property="industryType" column="INDUSTRY_TYPE" />
		<result property="unitNature" column="UNIT_NATURE" />
		<result property="maritalStatus" column="MARITAL_STATUS" />
		<result property="degreeEducation" column="DEGREE_EDUCATION" />
		<result property="positio" column="POSITIO" />
		<result property="title" column="TITLE" />
		<result property="annualIncome" column="ANNUAL_INCOME" />
		<result property="yearWorkUnit" column="YEAR_WORK_UNIT" />
		<result property="workTime" column="WORK_TIME" />
		<result property="sex" column="SEX" />
	</resultMap>
	<sql id="CustomerList">
		chinese_name,CARD_ID,
		HOUSEHOLD_ADDRESS,CUSTOMER_BUSINESS_APTITUDE,INDUSTRY_TYPE,UNIT_NATURE,
		MARITAL_STATUS,DEGREE_EDUCATION,POSITIO,TITLE,ANNUAL_INCOME,YEAR_WORK_UNIT,
		WORK_TIME,SEX
	</sql>
	
	<resultMap id="AccountResultMap" type="com.cardpay.pccredit.report.model.IntelligentAccountReport">
		<result property="cardNbr" column="CARD_NUMBER" />
	    <result property="activationStatus" column="ACTIVATION_STATUS" />
		<result property="principalOverdraft" column="PRINCIPAL_OVERDRAFT" />
		<result property="interest" column="INTEREST" />
		<result property="annualFee" column="ANNUAL_FEE" />
		<result property="totalAmountOverdraft" column="TOTAL_AMOUNT_OVERDRAFT" />
		<result property="availableLimit" column="availableLimit" />
		<result property="lastTotalAmountOverdraft" column="lastTotalAmountOverdraft" />
		<result property="lastPrincipalOverdraft" column="lastPrincipalOverdraft" />
		<result property="lastInterest" column="lastInterest" />
		<result property="paybackAccount" column="PAYBACK_ACCOUNT" />
	    <result property="overdueAmount" column="OVERDUE_AMOUNT" />
		<result property="overdueTime" column="overdue_time" />
	</resultMap>
	
	<resultMap id="AccountResultMap2" type="com.cardpay.pccredit.report.model.IntelligentAccountReport2">
		<result property="card_number" column="card_number" />
	    <result property="is_new_customer" column="is_new_customer" />
		<result property="principal_overdraft" column="principal_overdraft" />
		<result property="interest_receivable" column="interest_receivable" />
		<result property="total_amount_overdraft" column="total_amount_overdraft" />
		<result property="recent_lowest_bill" column="recent_lowest_bill" />
	</resultMap>
	
	<sql id="AccountList">
		cai.CARD_NUMBER,ACTIVATION_STATUS,ado.PRINCIPAL_OVERDRAFT,INTEREST,ANNUAL_FEE,ado.TOTAL_AMOUNT_OVERDRAFT,PAYBACK_ACCOUNT,
		cab.OVERDUE_AMOUNT,overdue_time
	</sql>
	
	<resultMap id="DataResultMap" type="com.cardpay.pccredit.report.model.PostLoanManagementData">
		 <result property="allDueStatusCount" column="allDue" />
		 <result property="lowDueStatusCount" column="lowDue" />
	</resultMap>
	
	<sql id="DataList">
		(select count(*) from average_daily_overdraft t where t.all_due_status=1) as allDue,
		(select count(*) from average_daily_overdraft t where t.low_due_status=1) as lowDue
	</sql>
	
	<select id="findIntelligentCustomerReport" resultMap="CustomerResultMap">
		select b.id,
		(select count(CREDIT_AMOUNT) from customer_account_information cai where cai.customer_id=b.id) as creditAmount,
		(select count(TEMP_AMOUNT)  from customer_account_information cai where cai.customer_id=b.id) as tempAmount,
		<include refid="CustomerList" />
		from
		basic_customer_information b
		left join
		customer_careers_information c
		on b.id=c.customer_id
	</select>
	
	<select id="findIntelligentAccountReportAll" resultMap="AccountResultMap2"
		parameterType="com.cardpay.pccredit.report.filter.UserDefFilter">
	    select 
		CARD_NUMBER,
		1 as is_new_customer,
		PRINCIPAL_OVERDRAFT,
		INTEREST_RECEIVABLE,
		TOTAL_AMOUNT_OVERDRAFT,
		RECENT_LOWEST_BILL
		from customer_account_information a
		<if test="orgId!=null and orgId!=''">
		,BASIC_CUSTOMER_INFORMATION b
		where a.CUSTOMER_ID=b."ID" 
		
		and b.user_id in (select user_id from sys_dept_user where dept_id in (select id from sys_department where org_id=#{orgId}))
		</if>
	</select>
	
	<select id="findIntelligentAccountReport" resultMap="AccountResultMap2"
	    parameterType="com.cardpay.pccredit.report.filter.UserDefFilter">
	    SELECT * FROM
			(SELECT ROW_.*,ROWNUM ROWNUM_
				FROM (
					select 
					CARD_NUMBER,
					1 as is_new_customer,
					PRINCIPAL_OVERDRAFT,
					INTEREST_RECEIVABLE,
					TOTAL_AMOUNT_OVERDRAFT,
					RECENT_LOWEST_BILL
					from customer_account_information a
					<if test="orgId!=null and orgId!=''">
					,BASIC_CUSTOMER_INFORMATION b
					where a.CUSTOMER_ID=b."ID" 
					
					and b.user_id in (select user_id from sys_dept_user where dept_id in (select id from sys_department where org_id=#{orgId}))
					</if>
					<![CDATA[		
							) ROW_
						WHERE ROWNUM <= #{limit}*#{page} + #{limit}) 
					WHERE ROWNUM_ > #{limit}*#{page}
					]]>
	</select>
	
	<select id="findIntelligentAccountReportCount" resultType="int"
	parameterType="com.cardpay.pccredit.report.filter.UserDefFilter">
	    select count(1) as count from customer_account_information a
	    <if test="orgId!=null and orgId!=''">
					,BASIC_CUSTOMER_INFORMATION b
					where a.CUSTOMER_ID=b."ID" 
					
					and b.user_id in (select user_id from sys_dept_user where dept_id in (select id from sys_department where org_id=#{orgId}))
					</if>
	</select>
	
	<select id="findPostLoanManagementData" resultMap="DataResultMap">
		select rownum,
		<include refid="DataList" />
		from
		average_daily_overdraft 
		<![CDATA[
		   where rownum<2
		]]>
		
	</select>
	
</mapper>